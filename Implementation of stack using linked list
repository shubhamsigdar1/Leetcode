**Day #55**

Implementation of stack using Linked List


class Node{
  constructor(data){
    this.data=data;
    this.next=null;
  }
}

class StackImplementation{
   constructor(){
     this.top=null;
     this.size=0;
   }
  push(element){
    let newNode=new Node(element);
    if(newNode===null){
       console.log("stack overflow");
       return;
    }
    if(this.size>0){
      newNode.next=this.top;
      this.top=newNode;
    }else{
      this.top=newNode;
    }
    this.size+=1;
    // console.log(this.top);
    // console.log(this.size);
  }
 pop(){
   if(this.top===null){
     console.log("stack underflow")
   }
   let currentNode = this.top;
   this.top=this.top.next;
   currentNode.next=null;
   this.size-=1;
 }
}

let stack = new StackImplementation();
stack.push(1);
stack.push(2);
stack.push(3);
stack.push(4);
stack.push(5);
stack.push(6);
stack.pop();
stack.pop();
stack.pop();
stack.pop();
stack.pop();
stack.pop();
// stack.pop();


